$color_default: #ffffff;
$color_light: #91D4DA;
$color_dark: #41868F;
$color_darkest: #433451;
$color_aux: #DB495E;


// --------------------------------------------------------------------------------


*, *:after, *:before { -webkit-box-sizing: border-box; box-sizing: border-box; }

body {
  background-color: #FCFCFC;
  color: #333;
  font-size: 1em;
  font-family: "Helvetica Neue", Helvetica, Roboto, Arial, sans-serif;
  min-height: 500px;
  -webkit-font-smoothing: antialiased;
  font-smoothing: antialiased;

  overflow-x: hidden;
  overflow-y: auto;
}

a {
  color: #fff;
  text-decoration: none;
  outline: none;
}

.clearfix:before, .clearfix:after { content: ''; display: table; }
.clearfix:after { clear: both; }

%fullwidth, .fullwidth {
  width: 100% !important;
  margin-left: auto !important;
  margin-right: auto !important;
  max-width: initial !important;
}

%round, .round { border-radius: 50%; }


// --------------------------------------------------

.st--hidden { display: none; }





/// Computes a top-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function top-shadow-card($depth) {
  $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
  $blur: nth(1.5 3 10 14 19, $depth) * 4px;
  $color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));

  @return 0 $primary-offset $blur $color;
}

/// Computes a bottom-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function bottom-shadow-card($depth) {
  $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
  $blur: nth(1 3 3 5 6, $depth) * 4px;
  $color: rgba(black, nth(.24 .23 .23 .22 .22, $depth));

  @return 0 $primary-offset $blur $color;
}

@mixin material-shadow($depth) {
  @if $depth < 1 {
    box-shadow: none;
  } @else if $depth > 5 {
    @warn "Invalid $depth `#{$depth}` for mixin `card`.";
  } @else {
    box-shadow: bottom-shadow-card($depth), top-shadow-card($depth);
  }
}